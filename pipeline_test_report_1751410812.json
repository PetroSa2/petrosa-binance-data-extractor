{
  "timestamp": "2025-07-01T20:00:11.891980",
  "tests_run": 20,
  "tests_passed": 4,
  "tests_failed": 16,
  "errors": [
    "Default Service Names: No module named 'constants'",
    "Custom Environment Variables: cannot access local variable 'constants' where it is not associated with a value",
    "Basic Telemetry Init: No module named 'otel_init'",
    "TelemetryManager Init: No module named 'utils'",
    "Urllib3 Instrumentation: No module named 'opentelemetry.instrumentation.urllib3'",
    "Klines Production Import: No module named 'jobs'",
    "Klines Manual Import: No module named 'jobs'",
    "Funding Rates Import: No module named 'jobs'",
    "Trades Import: No module named 'jobs'",
    "K8s OpenTelemetry ConfigMap/Secret: File not found: k8s/otel-config.yaml",
    "K8s CronJobs Configuration: File not found: k8s/klines-all-timeframes-cronjobs.yaml",
    "K8s Deployment Script: File not found: scripts/deploy-otel.sh",
    "Graceful Error Handling: No module named 'otel_init'",
    "Invalid Service Names: No module named 'otel_init'",
    "Import Performance: No module named 'constants'",
    "Telemetry Setup Performance: No module named 'otel_init'"
  ],
  "performance_metrics": {
    "Default Service Names": "0.000s",
    "Custom Environment Variables": "0.000s",
    "Basic Telemetry Init": "0.000s",
    "TelemetryManager Init": "0.000s",
    "Requests Instrumentation": "0.245s",
    "Pymongo Instrumentation": "0.108s",
    "Sqlalchemy Instrumentation": "0.102s",
    "Logging Instrumentation": "0.001s",
    "Urllib3 Instrumentation": "0.000s",
    "Klines Production Import": "0.000s",
    "Klines Manual Import": "0.000s",
    "Funding Rates Import": "0.000s",
    "Trades Import": "0.000s",
    "K8s OpenTelemetry ConfigMap/Secret": "0.000s",
    "K8s CronJobs Configuration": "0.000s",
    "K8s Deployment Script": "0.000s",
    "Graceful Error Handling": "0.000s",
    "Invalid Service Names": "0.000s",
    "Import Performance": "0.000s",
    "Telemetry Setup Performance": "0.000s"
  },
  "service_configs": {}
}